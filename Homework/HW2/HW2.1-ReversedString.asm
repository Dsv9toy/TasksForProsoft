; Second homeWork Part 1.
; task: Необходимо перевернуть строку (например abc->bca)
; 1 - Строка попадает через терминал
; 2 - Строка сохраняется в регистре
; 3 - Создается функция которая берет из регистра строку, переворачивает ее и сохраняет новый результат
; 4 - Печать перевернутой строки на экран

; #Данный алгоритм напоминает работу стека. Печатаем слева направо, а считываем справа налево(с конца)
; #Будем использовать его.
; Сначала печатаем приветствие -> Ждем ввод в консоль -> Переворачиваем строку -> Выводим результат


section .data  ; секция данных

message dw 'Магический разворот строки: ', 0    ; строка для вывода на консоль
nextLine db, 10, 0  ; Для перехода на новую строку


section .bss ; Секция неинициализируемых данных. Для буферов ввода/вывода объявим

inputBuff resb 100
outputBuff resb 100


section .text ; секция для кода

    general _start ; делаем метку метку _start видимой извне

;---------------------------------------------Функция вывода сообщения приветствия программы.-----------------
PrintEnterMsg:
    push rax ; Сохраняем состояние тк он исп-ся для системных вызовов
    push rdi ; Сохраняем состояние тк он исп-ся для определения назначения данных. 
    
    mov rax, 1 ; говорим - Переводись в состояние записи write
    mov rdi, 1 ; 1 - значит на экран(stdout)

; RSI и RDX писать не надо так как они уже передались как параметры из секции .data

    syscall  

    pop rax
    pop rdi ; вернули всё на место

    ret

;--------------------------------------------Функция чтения введенной строки.-----------------------------------
ReadImputStrFunc:
    push rdi ; Сохраняем состояние тк он исп-ся для определения назначения данных. 

    mov rax, 0 ; Говорим - rax, теперь читай данные 
    mov rdi, 0 ; Откуда? - с командной строки

; RSI и RDX писать не надо так как они уже передались


    syscall

    pop rdi ; вернули всё на место    

    ret

;--------------------------------------------Функция преобразования строки в обратную через стек--------------------------
ReverseStrFunc:
    push rdi





    ret
;--------------------------------------------Функция вывода преобразованной строки на экран----------------------
OutputStrFunc:

_start:   ; Точка входа в программу


